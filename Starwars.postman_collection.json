{
	"info": {
		"_postman_id": "6bb41173-839b-4f0b-9df6-371d64a9d7dc",
		"name": "Starwars",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24878489"
	},
	"item": [
		{
			"name": "People",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"mass\");\r",
							"});\r",
							"pm.test(\"Проверка на gender\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.gender).to.eql(\"male\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "",
						"value": "",
						"type": "text",
						"disabled": true
					}
				],
				"url": {
					"raw": "{{host}}api/people/10/",
					"host": [
						"{{host}}api"
					],
					"path": [
						"people",
						"10",
						""
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Planet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"diameter\");\r",
							"});\r",
							"pm.test(\"Проверка на surface_water\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.surface_water).to.eql(\"8\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}api/planets/7/",
					"host": [
						"{{host}}api"
					],
					"path": [
						"planets",
						"7",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Starship",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"films\");\r",
							"});\r",
							"pm.test(\"Проверка на crew\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.crew).to.eql(\"5\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}api/starships/5/",
					"host": [
						"{{host}}api"
					],
					"path": [
						"starships",
						"5",
						""
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "https://swapi.py4e.com/"
		}
	]
}